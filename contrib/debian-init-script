#!/bin/sh

### BEGIN INIT INFO
# Provides:          encore
# Required-Start:    $local_fs $network nginx postgresql
# Required-Stop:     $local_fs $network nginx postgresql
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts the Encore Web server for measuring Web censorship
# Description:       starts the Encore Web server for measuring Web censorship using start-stop-daemon
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
NAME=encore
DESC=encore
USER=encore
USERHOME=$(eval echo ~encore)
DAEMON=$USERHOME/go/bin/encore
if [ -z "$ENCORE_PORTS" ]; then
	PORTS="8080 8081"
else
	PORTS=$ENCORE_PORTS
fi
DEBUG_PORT=8089

test -x $DAEMON || exit 0

set -e

. /lib/lsb/init-functions

start_encore() {
	if ! $DAEMON --version; then
		echo "aborting start"
		exit 1
	fi

	PORT=$1
	start-stop-daemon --start --quiet --background \
		--pidfile /var/run/$NAME-$PORT.pid --make-pidfile \
		--user $USER --chuid $USER \
		--exec $DAEMON -- \
			-cube_export=false \
			-database="dbname=encore host=/var/run/postgresql sslmode=disable" \
			-logfile=${USERHOME}/$NAME-$PORT.log \
			-listen_address="127.0.0.1:$PORT" \
			-server_url="//encore.noise.gatech.edu" \
			-task_templates_path=$USERHOME/go/src/github.com/sburnett/encore/task-templates \
			-stats_templates_path=$USERHOME/go/src/github.com/sburnett/encore/stats-templates \
			-static_path=$USERHOME/go/src/github.com/sburnett/encore/static || true
	echo "$NAME: port $PORT"
}

stop_encore() {
	PORT=$1
	start-stop-daemon --stop --quiet --pidfile /var/run/$NAME-$PORT.pid \
	--exec $DAEMON --user $USER || true
	echo "$NAME: port $PORT"
}

case "$1" in
	start)
		echo -n "Starting $DESC: "
		for PORT in $PORTS; do
			start_encore $PORT
		done
		;;

	debug-start)
		echo -n "Starting $DESC: "
		start_encore $DEBUG_PORT
		;;

	stop)
		echo -n "Stopping $DESC: "
		for PORT in $PORTS; do
			stop_encore $PORT
		done
		;;

	debug-stop)
		echo -n "Stopping $DESC: "
		stop_encore $DEBUG_PORT
		;;

	restart)
		echo -n "Restarting $DESC: "
		if ! $DAEMON --version; then
			echo "aborting restart"
			exit 1
		fi
		for PORT in $PORTS; do
			stop_encore $PORT
			sleep 1
			start_encore $PORT
		done
		;;

	debug-restart)
		echo -n "Restarting $DESC: "
		stop_encore $DEBUG_PORT
		sleep 1
		start_encore $DEBUG_PORT
		;;

	status)
		status_of_proc -p /var/run/$NAME-$PORT.pid "$DAEMON" encore && exit 0 || exit $?
		;;
	*)
		echo "Usage: $NAME {start|stop|restart|status}" >&2
		exit 1
		;;
esac

exit 0
